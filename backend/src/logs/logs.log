{"level":"error"}
{"level":"error"}
{"level":"error"}
{"level":"error"}
{"level":"error","message":"Internship not found","stack":"Error: Internship not found\n    at notFound (/mnt/sdb/Github/IMS/backend/src/utils/not-found.ts:17:15)\n    at Array.<anonymous> (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:29:17)\n    at Generator.next (<anonymous>)\n    at fulfilled (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:5:58)"}
{"clientVersion":"5.17.0","level":"error","message":"\nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$3SVaghmcY6SCEVQj84NF/OQJOq6q9a2DATD.CMUNk2gGfc0fVIa52\",\n         phone: \"12345678\",\n         address: \"somewhere\",\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$3SVaghmcY6SCEVQj84NF/OQJOq6q9a2DATD.CMUNk2gGfc0fVIa52\",\n         phone: \"12345678\",\n         address: \"somewhere\",\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.\n    at An (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:114:7526)\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7392)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"body":"{\r\n    \"name\": \"kazuko\",\r\n    \"email\": \"kazuko@gmail.com\",\r\n    \"password\": \"12345678\",\r\n    \"phone\": \"12345678\",\r\n    \r\n}","expose":true,"level":"error","message":"Expected double-quoted property name in JSON at position 121 (line 7 column 1)","stack":"SyntaxError: Expected double-quoted property name in JSON at position 121 (line 7 column 1)\n    at JSON.parse (<anonymous>)\n    at parse (/mnt/sdb/Github/IMS/backend/node_modules/body-parser/lib/types/json.js:92:19)\n    at /mnt/sdb/Github/IMS/backend/node_modules/body-parser/lib/read.js:128:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at invokeCallback (/mnt/sdb/Github/IMS/backend/node_modules/raw-body/index.js:238:16)\n    at done (/mnt/sdb/Github/IMS/backend/node_modules/raw-body/index.js:227:7)\n    at IncomingMessage.onEnd (/mnt/sdb/Github/IMS/backend/node_modules/raw-body/index.js:287:7)\n    at IncomingMessage.emit (node:events:515:28)\n    at IncomingMessage.emit (node:domain:488:12)\n    at endReadableNT (node:internal/streams/readable:1589:12)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"clientVersion":"5.17.0","level":"error","message":"\nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$PQXRRV7Qe.biG3aswjNxSe1c4q8twgIGn3.8g5cwj/35qAzIsscU2\",\n         phone: \"12345678\",\n         address: undefined,\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$PQXRRV7Qe.biG3aswjNxSe1c4q8twgIGn3.8g5cwj/35qAzIsscU2\",\n         phone: \"12345678\",\n         address: undefined,\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.\n    at An (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:114:7526)\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7392)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","level":"error","message":"\nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$PBRfkNOI5zO6blYzsB1ioeP6bjEtlkQinmM3c92YtTDLp0eQ1GNv.\",\n         phone: \"12345678\",\n         address: undefined,\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.company.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/CompanyController.ts:22:28\n\n  19 validateInput({ name, email, password, phone, address, weburl }, res);\n  20 \n  21 const hashedPassword = await bcrypt.hash(password, 10);\n→ 22 await prisma.company.create({\n       data: {\n         name: \"kazuko\",\n         email: \"kazuko@gmail.com\",\n         password: \"$2b$10$PBRfkNOI5zO6blYzsB1ioeP6bjEtlkQinmM3c92YtTDLp0eQ1GNv.\",\n         phone: \"12345678\",\n         address: undefined,\n     +   weburl: String\n       }\n     })\n\nArgument `weburl` is missing.\n    at An (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:114:7526)\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7392)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2025","level":"error","message":"No Company found","name":"NotFoundError","stack":"NotFoundError: No Company found\n    at /mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:30:611\n    at async /mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:30:551"}
{"level":"error","message":"Application not found","stack":"Error: Application not found\n    at notFound (/mnt/sdb/Github/IMS/backend/src/utils/not-found.ts:19:11)\n    at Array.<anonymous> (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:29:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:5:58)"}
{"level":"error","message":"Application not found","stack":"Error: Application not found\n    at notFound (/mnt/sdb/Github/IMS/backend/src/utils/not-found.ts:19:11)\n    at Array.<anonymous> (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:29:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:5:58)"}
{"clientVersion":"5.17.0","code":"P2002","level":"error","message":"\nInvalid `prisma.application.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/ApplicationController.ts:88:29\n\n  85 \t});\n  86 }\n  87 \n→ 88 await prisma.application.create(\nUnique constraint failed on the fields: (`studentId`,`internshipId`)","meta":{"modelName":"Application","target":["studentId","internshipId"]},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.application.create()` invocation in\n/mnt/sdb/Github/IMS/backend/src/controllers/ApplicationController.ts:88:29\n\n  85 \t});\n  86 }\n  87 \n→ 88 await prisma.application.create(\nUnique constraint failed on the fields: (`studentId`,`internshipId`)\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2025","level":"error","message":"No Application found","name":"NotFoundError","stack":"NotFoundError: No Application found\n    at /mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:30:611\n    at async /mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:30:551"}
{"level":"error","message":"Mentor not found","stack":"Error: Mentor not found\n    at notFound (/mnt/sdb/Github/IMS/backend/src/utils/not-found.ts:19:11)\n    at Array.<anonymous> (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:29:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (/mnt/sdb/Github/IMS/backend/src/middleware/PrismMiddleware.ts:5:58)"}
{"clientVersion":"5.17.0","code":"P2010","level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"company\" does not exist`","meta":{"code":"42P01","message":"relation \"company\" does not exist"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"company\" does not exist`\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2010","level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column f.userid does not exist`","meta":{"code":"42703","message":"column f.userid does not exist"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column f.userid does not exist`\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2010","level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column i.companyid does not exist`","meta":{"code":"42703","message":"column i.companyid does not exist"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42703`. Message: `column i.companyid does not exist`\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2010","level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"company\" does not exist`","meta":{"code":"42P01","message":"relation \"company\" does not exist"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42P01`. Message: `relation \"company\" does not exist`\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
{"clientVersion":"5.17.0","code":"P2010","level":"error","message":"\nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: \"AccountType\" = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.`","meta":{"code":"42883","message":"ERROR: operator does not exist: \"AccountType\" = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts."},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nRaw query failed. Code: `42883`. Message: `ERROR: operator does not exist: \"AccountType\" = text\nHINT: No operator matches the given name and argument types. You might need to add explicit type casts.`\n    at _n.handleRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7749)\n    at _n.handleAndLogRequestError (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:7057)\n    at _n.request (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:121:6741)\n    at async l (/mnt/sdb/Github/IMS/backend/node_modules/@prisma/client/runtime/library.js:130:9355)"}
